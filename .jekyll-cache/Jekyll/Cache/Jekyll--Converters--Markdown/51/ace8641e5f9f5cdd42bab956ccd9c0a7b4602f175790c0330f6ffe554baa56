I"ù	<h1 id="spherical-harmonics-in-gaussian-splats">Spherical Harmonics in Gaussian Splats</h1>

<h2 id="-why-use-spherical-harmonics-in-gaussian-splats">üî∏ Why Use Spherical Harmonics in Gaussian Splats?</h2>

<p>When rendering 3D scenes using Gaussian splats, each point (or ‚Äúsplat‚Äù) needs to represent not just <strong>color</strong>, but how that color <strong>changes depending on the viewing direction</strong>. Spherical harmonics allow encoding this angular variation compactly.</p>

<p>This is important for achieving <strong>photorealistic rendering</strong> with effects like:</p>
<ul>
  <li>Specular highlights</li>
  <li>Soft shadows</li>
  <li>View-dependent lighting changes</li>
</ul>

<h2 id="-what-are-spherical-harmonics">üî∏ What Are Spherical Harmonics?</h2>

<p><strong>Spherical Harmonics (SH)</strong> are a series of <strong>orthogonal basis functions</strong> defined on the surface of a sphere. You can think of them as the 3D analog of <strong>Fourier series</strong> for functions on a sphere.</p>

<p>They are indexed by:</p>
<ul>
  <li><strong>Degree (l)</strong>: controls the frequency (higher means more detail)</li>
  <li><strong>Order (m)</strong>: varies from <code class="language-plaintext highlighter-rouge">-l</code> to <code class="language-plaintext highlighter-rouge">+l</code></li>
</ul>

<h3 id="example-levels">Example Levels:</h3>
<ul>
  <li><strong>SH level 0 (SH0):</strong> Only constant color (no view dependence)</li>
  <li><strong>SH level 1 (SH1):</strong> Basic directional lighting (like Lambertian)</li>
  <li><strong>SH level 2 or 3+:</strong> Captures more complex angular dependencies</li>
</ul>

<h2 id="-sh-in-gaussian-splatting">üî∏ SH in Gaussian Splatting</h2>

<p>Each 3D Gaussian stores:</p>
<ul>
  <li>Position, scale, rotation, opacity</li>
  <li><strong>Spherical Harmonics coefficients for RGB appearance</strong></li>
</ul>

<p>Instead of storing just a single RGB color, we store a <strong>set of SH coefficients per color channel</strong>. When rendering:</p>
<ol>
  <li>Compute the <strong>viewing direction</strong> <code class="language-plaintext highlighter-rouge">v</code> for each Gaussian.</li>
  <li>Evaluate the <strong>SH basis functions</strong> at direction <code class="language-plaintext highlighter-rouge">v</code> to get a vector <code class="language-plaintext highlighter-rouge">SH_basis(v)</code>.</li>
  <li>Compute the final color as a dot product:</li>
</ol>

:ET